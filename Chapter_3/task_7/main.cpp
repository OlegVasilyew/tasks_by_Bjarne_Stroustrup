#include <iostream>
#include <string.h>
#include <cstdlib>


using namespace std;

/*
*	Задание 7.
*
*	Напишите такие функции: strlen() - подсчет длины строки,
*	strcpy() - копирование строк и strcmp() - сравнение строк.
*/


// Реализация функции strlen(). Принимает строку char и возвращает ее длину.
int strlength(char* Pchar) 
{
	int max = 0;
	while (*Pchar++) max++;
	return max;
}

// Реализация функции strcpy(). Принимает строку c_str_1, которая будет скопированна строкой c_str_2.
void strcopy(char* c_str1, char* c_str2)
{
	while (*c_str2++ = *c_str1++);
}


// Реализация функции strcmp(). Принимает строки Cchar и Pchar.
int strcomp(char* Cchar, char* Pchar) 
{
	while (true)
	{
		if ((int)*Cchar > (int)*Pchar) {					//   Сравнение начинаем с первого символа. Если первый или
			return 1;							// последующий символ 1-ой строки будет иметь больший индекс по стандарту
		}									// ASCII, чем 2-ой, то сразу возвращается 1, то есть 1-ая строка больше 2-ой.
		else if ((int)*Cchar < (int)*Pchar) {
			return -1;							//   Иначе возвращаем -1 - строка 1 меньше строки 2.
		}
		else {
			Cchar++;							//   Если не одного из предыдущий условий не выполнилось, то переходим
			Pchar++;							// к следующему символу в каждой строке.
			if (*Cchar == '\0' && *Pchar == '\0')				//   Здесь проверяем на одновременное окончание строк. То есть, если они
			{								// оканчиваются одновременно, и ни одно предыдущее условие не выполнилось,
				return 0;						// то строки равны. Возвращаем 0.
			}
			continue;							//   Если не достигнут конец строк, то переходим к следующией итерации цикла.
		}
	}
}

int main() 
{
	char n[] = "qwerty";								//
	char p[] = "qwertg";								//   Инициализируем произвольные строки
	char copy[] = "iopkal";								//

	cout << strlength(n) << endl << endl;						//   Выводим длину строки n.
	
	strcopy(n, copy);
	cout << n << endl << copy << endl << endl;					//   Выводим строку n, и скопированную строку copy.

	cout << strcomp(n, p);											// Выводим результат сравнения строк (1, -1, 0)
}
